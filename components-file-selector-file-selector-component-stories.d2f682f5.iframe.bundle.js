(self.webpackChunkangular_components_and_patterns=self.webpackChunkangular_components_and_patterns||[]).push([[545],{"./src/app/components/file-selector/file-selector.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FileSelector:()=>FileSelector,FileSelectorTests:()=>FileSelectorTests,default:()=>file_selector_component_stories});var asyncToGenerator=__webpack_require__("./node_modules/.pnpm/@babel+runtime@7.26.0/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"),dist=__webpack_require__("./node_modules/.pnpm/@storybook+test@8.5.6_storybook@8.5.0/node_modules/@storybook/test/dist/index.mjs"),utils=__webpack_require__("./src/app/utils/index.ts");const testFilePath1="file1.txt",testFilePath2="file2.txt",testFolderFilePath=`folder/${testFilePath1}`,testSubFolderFilePath1=`parentFolder/subfolder1/${testFilePath1}`,testSubFolderFilePath2=`parentFolder/subfolder2/${testFilePath2}`;var tslib_es6=__webpack_require__("./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs");var file_selector_component=__webpack_require__("./src/app/components/file-selector/file-selector.component.ts.scss?ngResource!=!./node_modules/.pnpm/@ngtools+webpack@19.0.5_@angular+compiler-cli@19.1.1_typescript@5.6.3_webpack@5.96.1/node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=Omhvc3R7ZGlzcGxheTpjb250ZW50c30%3D!./src/app/components/file-selector/file-selector.component.ts"),file_selector_component_default=__webpack_require__.n(file_selector_component),common=__webpack_require__("./node_modules/.pnpm/@angular+common@19.1.1_@angular+core@19.1.1_rxjs@7.8.1/node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/.pnpm/@angular+core@19.1.1_rxjs@7.8.1_zone.js@0.15.0/node_modules/@angular/core/fesm2022/core.mjs");let FileSelectorComponent=class FileSelectorComponent{constructor(){this.text="Drag & drop or click to upload",this.multiple=!1,this.webkitdirectory=!1,this.filesSelected=new core.EventEmitter,this.files=[]}onFileSelect(files){this.files=files,this.filesSelected.emit(files)}static{this.propDecorators={text:[{type:core.Input}],multiple:[{type:core.Input}],webkitdirectory:[{type:core.Input}],filesSelected:[{type:core.Output}]}}};FileSelectorComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-file-selector",template:'\x3c!-- Drag and drop area --\x3e\n<div\n  class="relative rounded-lg border-2 border-dashed p-4 hover:cursor-pointer hover:border-blue-200 hover:bg-blue-50"\n  [dragOverClass]="\'bg-blue-200 border-blue-500\'"\n  (filesSelected)="onFileSelect($event)"\n  appFileDrop\n>\n  {{ text }}\n  \x3c!-- File input --\x3e\n  <input\n    class="absolute left-0 top-0 z-10 h-full w-full cursor-pointer opacity-0"\n    [attr.multiple]="multiple ? \'\' : null"\n    [attr.webkitdirectory]="webkitdirectory ? \'\' : null"\n    (filesSelected)="onFileSelect($event)"\n    type="file"\n    aria-label="Select Files"\n    appFileSelect\n  />\n</div>\n',imports:[common.CommonModule,utils.Ff,utils.UJ],styles:[file_selector_component_default()]})],FileSelectorComponent);const originalFireEventDrop=dist.rC.drop,file_selector_component_stories={title:"Components/File Selector",component:FileSelectorComponent,parameters:{docs:{description:{component:"FileSelector"}}},argTypes:{filesSelected:{action:"filesSelected",table:{disable:!0}}},args:{text:"Drag & drop or click to upload",multiple:!0,webkitdirectory:!0}},FileSelector={},FileSelectorTests={play:(_ref=(0,asyncToGenerator.A)((function*({canvasElement,step,args}){yield step("2 files",(0,asyncToGenerator.A)((function*(){yield function filesSelectHandler(_x5){return _filesSelectHandler.apply(this,arguments)}(canvasElement),yield function filesDropHandler(_x2){return _filesDropHandler.apply(this,arguments)}(canvasElement)}))),yield step("a folder with a file",(0,asyncToGenerator.A)((function*(){yield function folderSelectHandler(_x6){return _folderSelectHandler.apply(this,arguments)}(canvasElement),yield function folderDropHandler(_x3){return _folderDropHandler.apply(this,arguments)}(canvasElement)}))),yield step("nested folders with files",(0,asyncToGenerator.A)((function*(){yield function nestedFolderSelectHandler(_x7){return _nestedFolderSelectHandler.apply(this,arguments)}(canvasElement),yield function nestedFolderDropHandler(_x4){return _nestedFolderDropHandler.apply(this,arguments)}(canvasElement)})))})),function play(_x){return _ref.apply(this,arguments)})};var _ref;function _filesDropHandler(){return(_filesDropHandler=(0,asyncToGenerator.A)((function*(canvasElement){const dropZone=canvasElement.querySelector("[appFileDrop]");if(!dropZone)throw new Error("Drop zone not found");const files=[testFilePath1,testFilePath2].map(utils.aL),dataTransfer=(0,utils.Mh)(files);yield dist.rC.dragOver(dropZone),yield new Promise((resolve=>setTimeout(resolve,100))),patchFireEventDrop(dataTransfer),yield dist.rC.drop(dropZone)}))).apply(this,arguments)}function _folderDropHandler(){return(_folderDropHandler=(0,asyncToGenerator.A)((function*(canvasElement){const dropZone=canvasElement.querySelector("[appFileDrop]");if(!dropZone)throw new Error("Drop zone not found");const file1=(0,utils.aL)(testFolderFilePath),folder=(0,utils.Z8)("folder",[file1]),dataTransfer=(0,utils.Mh)([folder]);yield dist.rC.dragOver(dropZone),yield new Promise((resolve=>setTimeout(resolve,100))),patchFireEventDrop(dataTransfer),yield dist.rC.drop(dropZone)}))).apply(this,arguments)}function _nestedFolderDropHandler(){return(_nestedFolderDropHandler=(0,asyncToGenerator.A)((function*(canvasElement){const dropZone=canvasElement.querySelector("[appFileDrop]");if(!dropZone)throw new Error("Drop zone not found");const file1=(0,utils.aL)(testSubFolderFilePath1),file2=(0,utils.aL)(testSubFolderFilePath2),childFolder1=(0,utils.Z8)("subfolder1",[file1]),childFolder2=(0,utils.Z8)("subfolder2",[file2]),parentFolder=(0,utils.Z8)("parentFolder",[childFolder1,childFolder2]),dataTransfer=(0,utils.Mh)([parentFolder]);yield dist.rC.dragOver(dropZone),yield new Promise((resolve=>setTimeout(resolve,100))),patchFireEventDrop(dataTransfer),yield dist.rC.drop(dropZone)}))).apply(this,arguments)}function _filesSelectHandler(){return(_filesSelectHandler=(0,asyncToGenerator.A)((function*(canvasElement){yield selectFiles(canvasElement,[(0,utils.pK)(testFilePath1),(0,utils.pK)(testFilePath2)])}))).apply(this,arguments)}function _folderSelectHandler(){return(_folderSelectHandler=(0,asyncToGenerator.A)((function*(canvasElement){yield selectFiles(canvasElement,[(0,utils.pK)(testFolderFilePath)])}))).apply(this,arguments)}function _nestedFolderSelectHandler(){return(_nestedFolderSelectHandler=(0,asyncToGenerator.A)((function*(canvasElement){yield selectFiles(canvasElement,[(0,utils.pK)(testSubFolderFilePath1),(0,utils.pK)(testSubFolderFilePath2)])}))).apply(this,arguments)}function selectFiles(_x8,_x9){return _selectFiles.apply(this,arguments)}function _selectFiles(){return(_selectFiles=(0,asyncToGenerator.A)((function*(canvasElement,files){const input=canvasElement.querySelector("[appFileSelect]");yield dist.Q4.upload(input,files)}))).apply(this,arguments)}function patchFireEventDrop(dataTransfer){dist.rC.drop=function(){var _ref5=(0,asyncToGenerator.A)((function*(element,options){const result=yield originalFireEventDrop(element,options),dropEvent=(0,utils.VR)("drop",dataTransfer);return element.dispatchEvent(dropEvent),result}));return function(_x10,_x11){return _ref5.apply(this,arguments)}}()}FileSelector.parameters={...FileSelector.parameters,docs:{...FileSelector.parameters?.docs,source:{originalSource:"{}",...FileSelector.parameters?.docs?.source}}},FileSelectorTests.parameters={...FileSelectorTests.parameters,docs:{...FileSelectorTests.parameters?.docs,source:{originalSource:"{\n  play: async ({\n    canvasElement,\n    step,\n    args\n  }) => {\n    await step('2 files', async () => {\n      await filesSelectHandler(canvasElement);\n      await filesDropHandler(canvasElement);\n    });\n    await step('a folder with a file', async () => {\n      await folderSelectHandler(canvasElement);\n      await folderDropHandler(canvasElement);\n    });\n    await step('nested folders with files', async () => {\n      await nestedFolderSelectHandler(canvasElement);\n      await nestedFolderDropHandler(canvasElement);\n    });\n  }\n}",...FileSelectorTests.parameters?.docs?.source}}}},"./src/app/components/file-selector/file-selector.component.ts.scss?ngResource!=!./node_modules/.pnpm/@ngtools+webpack@19.0.5_@angular+compiler-cli@19.1.1_typescript@5.6.3_webpack@5.96.1/node_modules/@ngtools/webpack/src/loaders/inline-resource.js?data=Omhvc3R7ZGlzcGxheTpjb250ZW50c30%3D!./src/app/components/file-selector/file-selector.component.ts":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_@rspack+core@1.2.3_webpack@5.96.1/node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/.pnpm/css-loader@7.1.2_@rspack+core@1.2.3_webpack@5.96.1/node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host {\n  display: contents;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);