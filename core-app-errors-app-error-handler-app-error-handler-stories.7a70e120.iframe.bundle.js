"use strict";(self.webpackChunkangular_components_and_patterns=self.webpackChunkangular_components_and_patterns||[]).push([[340],{"./node_modules/.pnpm/css-loader@7.1.2_@rspack+core@1.3.4_webpack@5.96.1/node_modules/css-loader/dist/runtime/api.js":module=>{module.exports=function(cssWithMappingToString){var list=[];return list.toString=function toString(){return this.map((function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content})).join("")},list.i=function i(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(item[5].length>0?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]?(item[1]="@media ".concat(item[2]," {").concat(item[1],"}"),item[2]=media):item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},"./node_modules/.pnpm/css-loader@7.1.2_@rspack+core@1.3.4_webpack@5.96.1/node_modules/css-loader/dist/runtime/noSourceMaps.js":module=>{module.exports=function(i){return i[1]}},"./src/app/core/app-errors/app-error-handler/app-error-handler.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ErrorHandlerDemo:()=>ErrorHandlerDemo,ErrorHandlerDemoComponent:()=>ErrorHandlerDemoComponent,__namedExportsOrder:()=>__namedExportsOrder,default:()=>app_error_handler_stories});var tslib_es6=__webpack_require__("./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs"),common=__webpack_require__("./node_modules/.pnpm/@angular+common@19.1.1_@angular+core@19.1.1_rxjs@7.8.2/node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/.pnpm/@angular+core@19.1.1_rxjs@7.8.2_zone.js@0.15.0/node_modules/@angular/core/fesm2022/core.mjs"),dist=__webpack_require__("./node_modules/.pnpm/@storybook+angular@8.5.0_@angular-devkit+architect@0.1902.7_@angular-devkit+build-angular@19._hmvh6qu5pjm6p5s6mjj3j6acr4/node_modules/@storybook/angular/dist/index.mjs"),utils=__webpack_require__("./src/app/utils/index.ts"),app_errors_module=__webpack_require__("./src/app/core/app-errors/app-errors.module.ts"),http=__webpack_require__("./node_modules/.pnpm/@angular+common@19.1.1_@angular+core@19.1.1_rxjs@7.8.2/node_modules/@angular/common/fesm2022/http.mjs"),app_error_model=__webpack_require__("./src/app/core/app-errors/app-error.model.ts");const MOCK_Error_STRING=new Error("Expected Error for Testing"),MOCK_Error_EMPTY=new Error,MOCK_Error_TRACE=new Error("Uncaught (in promise): Error Cannot match any routes. URL Segment: 'invalid_route'\nError: Cannot match any routes. URL Segment: 'invalid_route'\nat resolvePromise (zone.js:1213)\nat zone.js:1133\nat ZoneDelegate.invokeTask (zone.js:399)\nat Object.onInvokeTask (core.js:28692)\nat ZoneDelegate.invokeTask (zone.js:398)\nat Zone.runTask (zone.js:167)\nat drainMicroTaskQueue (zone.js:569)\n"),MOCK_AppError_EMPTY=new app_error_model.u({}),MOCK_AppError_FULL=new app_error_model.u({recommendedAction:"Recommended Action",description:"Description",details:"Details",title:"Title"}),MOCK_ServerError_EMPTY=new http.yz({error:{},status:0,statusText:""}),MOCK_ServerError_FULL=new http.yz({error:{message:"message"},status:500,statusText:"Server Error"}),ALL_ERRORS=new Map([["MOCK_Error_NULL",null],["MOCK_Error_STRING",MOCK_Error_STRING],["MOCK_Error_EMPTY",MOCK_Error_EMPTY],["MOCK_Error_TRACE",MOCK_Error_TRACE],["MOCK_AppError_EMPTY",MOCK_AppError_EMPTY],["MOCK_AppError_FULL",MOCK_AppError_FULL],["MOCK_ServerError_EMPTY",MOCK_ServerError_EMPTY],["MOCK_ServerError_FULL",MOCK_ServerError_FULL]]),KNOWN_ERRORS_DISPLAY=Array.from(ALL_ERRORS.entries()).map((([key,value])=>errorToErrorDisplay(key,value)));function errorToErrorDisplay(title,error){return{title,content:JSON.stringify(error,jsonStringifyErrorReplacer,2),action:()=>{throw error}}}function jsonStringifyErrorReplacer(key,value){if(value instanceof Error){const error={};return Object.getOwnPropertyNames(value).forEach((propName=>{error[propName]=value[propName]})),error}return value}let ErrorHandlerDemoComponent=class ErrorHandlerDemoComponent{constructor(){this.knownErrors=KNOWN_ERRORS_DISPLAY,this.knownErrorsExpanded=new Map(KNOWN_ERRORS_DISPLAY.map((e=>[e.title,!1])))}set error(value){this.customError=errorToErrorDisplay("Custom Error",value)}static{this.propDecorators={error:[{type:core.Input,args:[{required:!0}]}]}}};ErrorHandlerDemoComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"sb-error-handler-demo",template:'\n    \x3c!-- Storybook doesn\'t pick up tailwind classes unless they are in a component.ts, which is generally good but with custom demo components this shim is needed --\x3e\n    <style>\n      .odd:bg-neutral-200:nth-child(odd) {\n        background-color: #e5e5e5;\n      }\n      .even:bg-neutral-100:nth-child(even) {\n        background-color: #f5f5f5;\n      }\n      .py-2 {\n        padding-top: 0.5rem;\n        padding-bottom: 0.5rem;\n      }\n    </style>\n\n    <div class="flex flex-col">\n      <ng-container\n        *ngTemplateOutlet="\n          ErrorDisplay.template;\n          context: { $implicit: customError }\n        "\n      >\n      </ng-container>\n\n      @for (e of knownErrors; track $index) {\n        <ng-container\n          *ngTemplateOutlet="ErrorDisplay.template; context: { $implicit: e }"\n        >\n        </ng-container>\n      }\n\n      <ng-template\n        #ErrorDisplay="ngTemplateType"\n        [ngTemplateType]="KnownErrorDisplay"\n        let-error\n      >\n        <div class="py-2 odd:bg-neutral-200 even:bg-neutral-100">\n          <div>\n            <button\n              class="btn btn-icon"\n              (click)="\n                knownErrorsExpanded.set(\n                  error.title,\n                  !knownErrorsExpanded.get(error.title)\n                )\n              "\n            >\n              <i class="fa-solid fa-fw fa-info"></i>\n            </button>\n            <button class="btn btn-primary" (click)="error.action()">\n              Throw {{ error.title }}\n            </button>\n          </div>\n\n          <pre\n            [ngStyle]="{\n              display: knownErrorsExpanded.get(error.title) ? \'block\' : \'none\',\n            }"\n            style="white-space: pre-wrap;"\n            >{{ error.content }}</pre\n          >\n        </div>\n      </ng-template>\n    </div>\n  ',imports:[common.CommonModule,utils.DB],providers:[]})],ErrorHandlerDemoComponent);const app_error_handler_stories={title:"Core/Error Handler Demo",component:ErrorHandlerDemoComponent,decorators:[(0,dist.applicationConfig)({providers:[(0,core.importProvidersFrom)(app_errors_module.J)]})],parameters:{docs:{description:{component:"ErrorHandlerDemoComponent"}},layout:"fullscreen"},argTypes:{},args:{error:MOCK_AppError_FULL}},ErrorHandlerDemo={},__namedExportsOrder=["ErrorHandlerDemoComponent","ErrorHandlerDemo"];ErrorHandlerDemo.parameters={...ErrorHandlerDemo.parameters,docs:{...ErrorHandlerDemo.parameters?.docs,source:{originalSource:"{\n  //   render: (args): StoryFnAngularReturnType => ({ props: args }),\n  // play: async ({ canvasElement }) => { const canvasElement = within(canvasElement) },\n}",...ErrorHandlerDemo.parameters?.docs?.source}}}}}]);