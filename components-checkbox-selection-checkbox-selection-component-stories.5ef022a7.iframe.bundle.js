"use strict";(self.webpackChunkangular_components_and_patterns=self.webpackChunkangular_components_and_patterns||[]).push([[43],{"./src/app/components/checkbox-selection/checkbox-selection.class.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>CheckboxSelection});var Subject=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/Subject.js");function areAllChecked(sections){return sections.every((section=>section.items.every((item=>item.checked))))}function areSomeChecked(sections){return sections.some((section=>section.items.some((item=>item.checked))))}class CheckboxSelection{get allChecked(){return this._allChecked}get someChecked(){return this._someChecked}get allNextValue(){return this._allNextValue}constructor(sections){this.sections=sections,this._allChecked=areAllChecked(this.sections),this._someChecked=areSomeChecked(this.sections),this._allNextValue=!this._allChecked,this.sectionsChange=new Subject.B,this.sectionsChange$=this.sectionsChange.asObservable(),this.itemsChange=new Subject.B,this.itemsChange$=this.itemsChange.asObservable(),this.updateStates(),this._allNextValue=!this._allChecked}setSections(sections){this.sections=sections,this.updateStates(),this._allNextValue=!this._allChecked}updateStates(){this._allChecked=areAllChecked(this.sections),this._someChecked=areSomeChecked(this.sections),this.sectionsChange.next(this.sections)}setAll(){const changedItems=[];for(const section of this.sections)for(const item of section.items){if(item.disabled)continue;const prev=item.checked;item.checked=this._allNextValue,prev!==item.checked&&changedItems.push(item)}this._allNextValue=!this._allNextValue,this.itemsChange.next(changedItems),this.updateStates()}toggleItem(item){item.disabled||(item.checked=!item.checked,this.itemsChange.next([item]),this.updateStates())}}},"./src/app/components/checkbox-selection/checkbox-selection.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CheckboxSelection:()=>CheckboxSelection,__namedExportsOrder:()=>__namedExportsOrder,default:()=>checkbox_selection_component_stories});var checkbox_model_mock=__webpack_require__("./src/app/forms/checkbox/checkbox.model.mock.ts"),tslib_es6=__webpack_require__("./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs");var common=__webpack_require__("./node_modules/.pnpm/@angular+common@19.1.1_@angular+core@19.1.1_rxjs@7.8.2/node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/.pnpm/@angular+core@19.1.1_rxjs@7.8.2_zone.js@0.15.0/node_modules/@angular/core/fesm2022/core.mjs"),Subject=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/Subject.js"),takeUntil=__webpack_require__("./node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js"),checkbox_component=__webpack_require__("./src/app/forms/checkbox/checkbox.component.ts"),checkbox_selection_class=__webpack_require__("./src/app/components/checkbox-selection/checkbox-selection.class.ts");let CheckboxSelectionComponent=class CheckboxSelectionComponent{set sections(sections){this._sections=sections,this.checkboxSelection.setSections(sections)}get sections(){return this._sections}constructor(){this.clearSub$=new Subject.B,this._sections=[],this.sectionsChange=new core.EventEmitter,this.itemsChange=new core.EventEmitter,this.checkboxSelection=new checkbox_selection_class.A(this._sections),this.checkboxSelection.itemsChange$.pipe((0,takeUntil.Q)(this.clearSub$)).subscribe((items=>{this.itemsChange.emit(items)})),this.checkboxSelection.sectionsChange$.pipe((0,takeUntil.Q)(this.clearSub$)).subscribe((sections=>{this.sectionsChange.emit(sections)}))}ngOnDestroy(){this.clearSub$.next(),this.clearSub$.complete()}onCheckboxToggleAll(){this.checkboxSelection.setAll()}onCheckboxToggle(item){this.checkboxSelection.toggleItem(item)}static{this.ctorParameters=()=>[]}static{this.propDecorators={sections:[{type:core.Input}],sectionsChange:[{type:core.Output}],itemsChange:[{type:core.Output}]}}};CheckboxSelectionComponent=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-checkbox-selection",template:'<div class="flex flex-col gap-4">\n  \x3c!-- \n  <pre>\n    allChecked {{ allChecked }}\n    someChecked {{ someChecked }}\n    allNextValue {{ allNextValue }}\n  </pre>\n --\x3e\n  <app-checkbox\n    [id]="\'checkbox-toggle-all\'"\n    [checked]="checkboxSelection.allChecked"\n    [indeterminate]="checkboxSelection.someChecked && !checkboxSelection.allChecked"\n    (checkedChange)="onCheckboxToggleAll()"\n  >\n    {{ checkboxSelection.allNextValue ? \'Select\' : \'Deselect\' }} All\n  </app-checkbox>\n\n  <div class="flex flex-col gap-4">\n    @for (section of sections; track $index) {\n      <div class="flex flex-col gap-2">\n        <span class="font-bold">{{ section.display }}</span>\n        <div class="gapx-10 flex grid-cols-2 flex-col gap-2 sm:grid lg:grid-cols-3">\n          @for (item of section.items; track $index) {\n            <app-checkbox\n              [id]="\'checkbox-\' + item.id"\n              [checked]="item.checked"\n              [disabled]="!!item.disabled"\n              (checkedChange)="onCheckboxToggle(item)"\n            >\n              {{ item.display }}\n            </app-checkbox>\n          }\n        </div>\n      </div>\n    }\n  </div>\n</div>\n',host:{class:"contents"},imports:[common.CommonModule,checkbox_component.P]}),(0,tslib_es6.Sn)("design:paramtypes",[])],CheckboxSelectionComponent);const checkbox_selection_component_stories={title:"Components/Checkbox Selection",component:CheckboxSelectionComponent,parameters:{docs:{description:{component:"CheckboxSelection"}}},argTypes:{sectionsChange:{action:"sectionsChange",table:{disable:!0}},itemsChange:{action:"itemsChange",table:{disable:!0}}},args:{sections:[...checkbox_model_mock.EH]}},CheckboxSelection={render:args=>({props:args})},__namedExportsOrder=["CheckboxSelection"];CheckboxSelection.parameters={...CheckboxSelection.parameters,docs:{...CheckboxSelection.parameters?.docs,source:{originalSource:"{\n  render: (args): StoryFnAngularReturnType => ({\n    props: args\n  })\n  // play: async ({ canvasElement }) => { const canvasElement = within(canvasElement) },\n}",...CheckboxSelection.parameters?.docs?.source}}}},"./src/app/forms/checkbox/checkbox.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{P:()=>CheckboxComponent});var tslib_es6=__webpack_require__("./node_modules/.pnpm/tslib@2.8.1/node_modules/tslib/tslib.es6.mjs");var common=__webpack_require__("./node_modules/.pnpm/@angular+common@19.1.1_@angular+core@19.1.1_rxjs@7.8.2/node_modules/@angular/common/fesm2022/common.mjs"),core=__webpack_require__("./node_modules/.pnpm/@angular+core@19.1.1_rxjs@7.8.2_zone.js@0.15.0/node_modules/@angular/core/fesm2022/core.mjs");let CheckboxComponent=class CheckboxComponent{constructor(){this.data=void 0,this.id="",this.checked=!1,this.indeterminate=!1,this.disabled=!1,this.display="",this.checkedChange=new core.EventEmitter,this.indeterminateChange=new core.EventEmitter}toggle(){this.disabled||(this.indeterminate&&(this.indeterminate=!1,this.indeterminateChange.emit(!1),this.checked=!this.checked),this.checked=!this.checked,this.checkedChange.emit(this.checked),this._inputElement&&(this._inputElement.nativeElement.checked=this.checked,this._inputElement.nativeElement.indeterminate=this.indeterminate))}_onInputClick(){this.toggle()}_onInteractionEvent(event){event.stopPropagation()}static{this.propDecorators={id:[{type:core.Input}],checked:[{type:core.Input,args:[{required:!0}]}],indeterminate:[{type:core.Input}],disabled:[{type:core.Input}],display:[{type:core.Input}],checkedChange:[{type:core.Output}],indeterminateChange:[{type:core.Output}],_inputElement:[{type:core.ViewChild,args:["input"]}]}}};CheckboxComponent=(0,tslib_es6.Cg)([(0,core.Component)({standalone:!0,selector:"app-checkbox",template:'<label\n  class="inline-flex cursor-pointer select-none items-center gap-2"\n  [class.opacity-50]="disabled"\n>\n  <input\n    class="h-5 w-5 cursor-pointer rounded border-gray-300 text-blue-600 focus:shadow-none"\n    #input\n    [checked]="checked"\n    [indeterminate]="indeterminate"\n    [disabled]="disabled"\n    (click)="_onInputClick()"\n    (change)="_onInteractionEvent($event)"\n    type="checkbox"\n  />\n  <span class="text-sm text-gray-800">\n    {{ display }}\n    <ng-content></ng-content>\n  </span>\n</label>\n\x3c!-- \n<pre>\n  checked: {{ checked }}\n  indeterminate: {{ indeterminate }}\n  nativeElement.checked {{ _inputElement?.nativeElement?.checked | json }}\n  disabled: {{ disabled }}\n</pre>\n--\x3e\n',host:{class:"contents"},imports:[common.CommonModule]})],CheckboxComponent)},"./src/app/forms/checkbox/checkbox.model.mock.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{EH:()=>MOCK_CheckboxSectionList,Zg:()=>MOCK_Checkbox});const MOCK_Checkbox={id:"1",display:"Checkbox Entry 1",checked:!0,data:void 0},MOCK_CheckboxSectionList=[{display:"Section 1",items:[{id:"1_1",display:"Item 1",data:void 0,checked:!1},{id:"1_2",display:"Item 2",data:void 0,checked:!1,disabled:!1},{id:"1_3",display:"Item 3",data:void 0,checked:!1}]},{display:"Section 2",items:[{id:"2_1",display:"Item 1",data:void 0,checked:!1},{id:"2_2",display:"Item 2",data:void 0,checked:!1},{id:"2_3",display:"Item 3",data:void 0,checked:!1}]}]}}]);